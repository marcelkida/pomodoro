{"version":3,"sources":["components/Button.js","Todo.js","TodoList.js","context/SettingsContext.js","components/CountdownAnimation.js","components/SetPomodoro.js","App.js","index.js"],"names":["Button","title","activeClass","_callback","className","onClick","Todo","todo","toggleTodo","type","checked","complete","onChange","id","name","TodoList","todos","map","SettingsContext","createContext","SettingsContextProvider","props","useState","pomodoro","setPomodoro","executing","setExecuting","startAnimate","setStartAnimate","updateExecute","updatedSettings","setTimerTime","evaluate","active","work","short","long","Provider","value","startTimer","pauseTimer","children","remainingTime","minutes","Math","floor","seconds","SettingsBtn","setCurrentTimer","active_state","stopAnimate","CountdownAnimation","key","timer","animate","useContext","isPlaying","duration","colors","strokeWidth","size","trailColor","onComplete","SetPomodoro","newTimer","setNewTimer","handleChange","input","target","parseInt","noValidate","onSubmit","e","preventDefault","LOCAL_STORAGE_KEY","App","setTodos","todoNameRef","useRef","buttonText","useEffect","storedTodos","JSON","parse","localStorage","getItem","setItem","stringify","undefined","newTodos","find","ref","current","prevTodos","uuidv4","filter","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17108f7c.chunk.js","sourcesContent":["\r\nconst Button = ({title,activeClass, _callback}) => {\r\n    return (\r\n        <button className={activeClass} onClick={_callback}>{title}</button>\r\n      )\r\n}\r\nexport default Button\r\n","import React from 'react'\r\n\r\nexport default function Todo({todo, toggleTodo}) {\r\n    function handleTodoClick(){\r\n        toggleTodo(todo.id)\r\n    }\r\n    return (\r\n        <div>\r\n            <label>\r\n                <input type = \"checkbox\" checked={todo.complete} onChange={handleTodoClick}/> \r\n              {todo.name}           \r\n            </label>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\n\r\nexport default function TodoList({todos, toggleTodo}) {\r\n    return (\r\n        todos.map(todo => {\r\n            return <Todo key={todo.id} toggleTodo={toggleTodo} todo={todo}/>\r\n        })\r\n    )\r\n}\r\n","import { useState, createContext } from \"react\";\r\nimport '../index.css';\r\nexport const SettingsContext = createContext()\r\n\r\nfunction SettingsContextProvider(props) {\r\n\r\n    const [pomodoro, setPomodoro] = useState(0)\r\n    const [executing, setExecuting] = useState({})\r\n    const [startAnimate, setStartAnimate] = useState(false)\r\n\r\n    function setCurrentTimer (active_state) {\r\n        updateExecute({\r\n            ...executing,\r\n            active: active_state\r\n        })\r\n        setTimerTime(executing)\r\n\r\n    }\r\n \r\n    function startTimer() {\r\n        setStartAnimate(true)\r\n        \r\n    }\r\n\r\n    function pauseTimer() {\r\n    setStartAnimate(false)\r\n    }\r\n \r\n    const children = ({ remainingTime }) => {\r\n    const minutes = Math.floor(remainingTime / 60)\r\n    const seconds = remainingTime % 60\r\n    \r\n    return `${minutes}:${seconds}`\r\n    }\r\n\r\n    const SettingsBtn = () => {\r\n        setExecuting({})\r\n        setPomodoro(0)\r\n    }\r\n\r\n    const updateExecute = updatedSettings => {\r\n        setExecuting(updatedSettings)\r\n        setTimerTime(updatedSettings)\r\n    }\r\n\r\n    const setTimerTime = (evaluate) => {\r\n        switch (evaluate.active) {\r\n            case 'work':\r\n                setPomodoro(evaluate.work)\r\n                break;\r\n            case 'short':\r\n                setPomodoro(evaluate.short)\r\n                break;\r\n            case 'long':\r\n                setPomodoro(evaluate.long)\r\n                break;\r\n                default:\r\n                    setPomodoro(0)\r\n                break;\r\n        }\r\n    }\r\n\r\n    function stopAnimate() {\r\n        setStartAnimate(false)\r\n    }\r\n\r\n    return (\r\n        <SettingsContext.Provider value={{\r\n            pomodoro, \r\n            executing,\r\n            updateExecute, \r\n            startAnimate, \r\n            startTimer,\r\n            pauseTimer,\r\n            children,\r\n            SettingsBtn,\r\n            setCurrentTimer,\r\n            stopAnimate\r\n        }}>\r\n            {props.children}\r\n        </SettingsContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default SettingsContextProvider","import { useContext } from 'react'\r\nimport {CountdownCircleTimer} from 'react-countdown-circle-timer'\r\nimport { SettingsContext } from '../context/SettingsContext'\r\nconst CountdownAnimation = ({key, timer, animate, children}) => {\r\n\r\n  const { stopAnimate } = useContext(SettingsContext)\r\n\r\n    return (\r\n      <CountdownCircleTimer\r\n        key={key}\r\n        isPlaying={animate}\r\n        duration={timer * 60}\r\n        colors={[\r\n          ['#9974ba', 0.33],\r\n          ['#9974ba', 0.33],\r\n          ['#9974ba', 0.33],\r\n        ]}\r\n        strokeWidth={6}\r\n        size={220}\r\n        trailColor=\"#121212\"\r\n        onComplete={ () => {\r\n          stopAnimate()\r\n        }}\r\n      >\r\n        {children}\r\n      </CountdownCircleTimer>\r\n    )\r\n}\r\n\r\nexport default CountdownAnimation\r\n","import React, { useContext, useState } from 'react'\r\nimport { SettingsContext } from '../context/SettingsContext'\r\n\r\nconst SetPomodoro = () => {\r\n\r\n    const [newTimer, setNewTimer] = useState({\r\n        work: 3,\r\n        short: 1,\r\n        long: 2,\r\n        active: 'work'\r\n    })\r\n\r\n    const {updateExecute} = useContext(SettingsContext)\r\n\r\n    const handleChange = input => {\r\n        const {name, value} = input.target\r\n        switch (name) {\r\n            case 'work':\r\n                setNewTimer({\r\n                    ...newTimer,\r\n                    work: parseInt(value)\r\n                })\r\n                break;\r\n            case 'shortBreak':\r\n                setNewTimer({\r\n                    ...newTimer,\r\n                    short: parseInt(value)\r\n                })\r\n                break;\r\n            case 'longBreak':\r\n                setNewTimer({\r\n                    ...newTimer,\r\n                    long: parseInt(value)\r\n                })\r\n                break;\r\n        }\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        updateExecute(newTimer)\r\n    }\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form noValidate onSubmit={handleSubmit}>\r\n                <div className=\"input-wrapper\">\r\n                    <div className=\"input-title\">work\r\n                    <input className=\"input\" type=\"number\" name=\"work\" onChange={handleChange} value={newTimer.work} />\r\n                    </div>\r\n                    <div className=\"input-title\">short\r\n                    <input className=\"input\" type=\"number\" name=\"shortBreak\" onChange={handleChange} value={newTimer.short} />\r\n                    </div>\r\n                    <div className=\"input-title\">long\r\n                    <input className=\"input\" type=\"number\" name=\"longBreak\" onChange={handleChange} value={newTimer.long} />\r\n                    </div>\r\n                </div>\r\n                <button type='submit'>Set Timer</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetPomodoro\r\n","import React, { useEffect, useContext, useState, useRef } from 'react'\r\nimport Button from './components/Button'\r\nimport TodoList from './TodoList'\r\nimport CountdownAnimation from './components/CountdownAnimation'\r\nimport SetPomodoro from './components/SetPomodoro'\r\nimport { SettingsContext } from './context/SettingsContext'\r\nimport {v4 as uuidv4} from 'uuid'\r\nimport './index.css';\r\n\r\n\r\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\r\nconst App = () => {\r\n  const [todos, setTodos] = useState([])\r\n  const todoNameRef = useRef()\r\n\r\n  const {\r\n    pomodoro,\r\n    executing,\r\n    startAnimate,\r\n    children,\r\n    startTimer,\r\n    pauseTimer,\r\n    updateExecute,\r\n    setCurrentTimer,\r\n    SettingsBtn,\r\n    buttonText } = useContext(SettingsContext)\r\n\r\n    useEffect(() => {updateExecute(executing)}, [executing, startAnimate])\r\n\r\n    useEffect(() =>{\r\n      const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\r\n      if (storedTodos) setTodos(storedTodos)\r\n    }, [])\r\n  \r\n    useEffect(() =>{\r\n      localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\r\n    }, [todos])\r\n  \r\n  function toggleTodo(id){\r\n    const newTodos = [...todos]\r\n    const todo = newTodos.find(todo => todo.id === id)\r\n    todo.complete = !todo.complete\r\n    setTodos(newTodos)\r\n  }\r\n  \r\n    function handleAddTodo(e){\r\n        const name = todoNameRef.current.value\r\n        if (name === '') return\r\n        setTodos(prevTodos => {\r\n          return [...prevTodos, { id: uuidv4(), name: name, complete: false}]\r\n        })\r\n    }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>pomotomo</h1>\r\n      {pomodoro !== 0 ?\r\n      <>\r\n      <Button title=\"settings\" _callback={SettingsBtn} />\r\n        <ul className=\"labels\">\r\n          <li>\r\n            <Button \r\n              title=\"work\" \r\n              activeClass={executing.active === 'work' ? 'active-label' : undefined} \r\n              _callback={() => setCurrentTimer('work') } \r\n              //onClick= {document.documentElement.style.setProperty('--color', '#9974ba')}\r\n            />\r\n          </li>\r\n          <li>\r\n            <Button \r\n              title=\"short break\" \r\n              activeClass={executing.active === 'short' ? 'active-label' : undefined} \r\n              _callback={() => setCurrentTimer('short')}\r\n              //onClick= {document.documentElement.style.setProperty('--color', '#74BA7B')} \r\n            />\r\n          </li>\r\n          <li>\r\n            <Button \r\n              title=\"long break\" \r\n              activeClass={executing.active === 'long' ? 'active-label' : undefined} \r\n              _callback={() => setCurrentTimer('long')} \r\n              //onClick= {document.documentElement.style.setProperty('--color', '#7490ba')}\r\n            />\r\n          </li>\r\n        </ul>\r\n        \r\n        <div className=\"timer-container\">\r\n          <div className=\"time-wrapper\">\r\n              <CountdownAnimation\r\n                key={pomodoro} \r\n                timer={pomodoro} \r\n                animate={startAnimate}\r\n              >\r\n                {children}\r\n              </CountdownAnimation>\r\n          </div>\r\n        </div>\r\n        <div className=\"button-wrapper\">\r\n          <Button title=\"start\" activeClass={!startAnimate ? 'active' : undefined} _callback={startTimer} onClick/>\r\n          <Button title=\"pause\" activeClass={startAnimate ? 'active' : undefined} _callback={pauseTimer} />\r\n        </div>\r\n        <TodoList todos={todos} toggleTodo={toggleTodo}/>\r\n      <input ref={todoNameRef} type=\"text\"/>\r\n      <button onClick={handleAddTodo}>add todo</button>\r\n      <div>{todos.filter(todo => !todo.complete).length} left to do</div>\r\n    \r\n      </> : <SetPomodoro />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport SettingsContextProvider from './context/SettingsContext';\r\n\r\nReactDOM.render(\r\n  <SettingsContextProvider>\r\n    <App />\r\n  </SettingsContextProvider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}