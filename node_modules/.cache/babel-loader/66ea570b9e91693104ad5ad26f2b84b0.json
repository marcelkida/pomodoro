{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kidam\\\\Documents\\\\GitHub\\\\pomodoro-app-with-react\\\\src\\\\context\\\\SettingsContext.js\",\n    _s = $RefreshSig$();\n\nimport { useState, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SettingsContext = /*#__PURE__*/createContext();\n\nfunction SettingsContextProvider(props) {\n  _s();\n\n  const [pomodoro, setPomodoro] = useState(0);\n  const [executing, setExecuting] = useState({});\n  const [startAnimate, setStartAnimate] = useState(false);\n\n  function setCurrentTimer(active_state) {\n    updateExecute({ ...executing,\n      active: active_state\n    });\n    setTimerTime(executing);\n  }\n\n  function startTimer() {\n    setStartAnimate(true);\n    document.querySelector('#ShowButton').title = 'Hide';\n  }\n\n  function pauseTimer() {\n    setStartAnimate(false);\n  }\n\n  const children = ({\n    remainingTime\n  }) => {\n    const minutes = Math.floor(remainingTime / 60);\n    const seconds = remainingTime % 60;\n    return `${minutes}:${seconds}`;\n  };\n\n  const SettingsBtn = () => {\n    setExecuting({});\n    setPomodoro(0);\n  };\n\n  const updateExecute = updatedSettings => {\n    setExecuting(updatedSettings);\n    setTimerTime(updatedSettings);\n  };\n\n  const setTimerTime = evaluate => {\n    switch (evaluate.active) {\n      case 'work':\n        setPomodoro(evaluate.work);\n        break;\n\n      case 'short':\n        setPomodoro(evaluate.short);\n        break;\n\n      case 'long':\n        setPomodoro(evaluate.long);\n        break;\n\n      default:\n        setPomodoro(0);\n        break;\n    }\n  };\n\n  function stopAnimate() {\n    setStartAnimate(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(SettingsContext.Provider, {\n    value: {\n      pomodoro,\n      executing,\n      updateExecute,\n      startAnimate,\n      startTimer,\n      pauseTimer,\n      children,\n      SettingsBtn,\n      setCurrentTimer,\n      stopAnimate\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SettingsContextProvider, \"GdYwznQ4Urh5G7RIaZeUw8jrTL4=\");\n\n_c = SettingsContextProvider;\nexport default SettingsContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingsContextProvider\");","map":{"version":3,"sources":["C:/Users/kidam/Documents/GitHub/pomodoro-app-with-react/src/context/SettingsContext.js"],"names":["useState","createContext","SettingsContext","SettingsContextProvider","props","pomodoro","setPomodoro","executing","setExecuting","startAnimate","setStartAnimate","setCurrentTimer","active_state","updateExecute","active","setTimerTime","startTimer","document","querySelector","title","pauseTimer","children","remainingTime","minutes","Math","floor","seconds","SettingsBtn","updatedSettings","evaluate","work","short","long","stopAnimate"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,aAAnB,QAAwC,OAAxC;;AAEA,OAAO,MAAMC,eAAe,gBAAGD,aAAa,EAArC;;AAEP,SAASE,uBAAT,CAAiCC,KAAjC,EAAwC;AAAA;;AAEpC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD;;AAEA,WAASW,eAAT,CAA0BC,YAA1B,EAAwC;AACpCC,IAAAA,aAAa,CAAC,EACV,GAAGN,SADO;AAEVO,MAAAA,MAAM,EAAEF;AAFE,KAAD,CAAb;AAIAG,IAAAA,YAAY,CAACR,SAAD,CAAZ;AACH;;AAED,WAASS,UAAT,GAAsB;AAClBN,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAO,IAAAA,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCC,KAAtC,GAA8C,MAA9C;AACH;;AAED,WAASC,UAAT,GAAsB;AACtBV,IAAAA,eAAe,CAAC,KAAD,CAAf;AACC;;AAED,QAAMW,QAAQ,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAuB;AACxC,UAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,aAAa,GAAG,EAA3B,CAAhB;AACA,UAAMI,OAAO,GAAGJ,aAAa,GAAG,EAAhC;AAEA,WAAQ,GAAEC,OAAQ,IAAGG,OAAQ,EAA7B;AACC,GALD;;AAOA,QAAMC,WAAW,GAAG,MAAM;AACtBnB,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAF,IAAAA,WAAW,CAAC,CAAD,CAAX;AACH,GAHD;;AAKA,QAAMO,aAAa,GAAGe,eAAe,IAAI;AACrCpB,IAAAA,YAAY,CAACoB,eAAD,CAAZ;AACAb,IAAAA,YAAY,CAACa,eAAD,CAAZ;AACH,GAHD;;AAKA,QAAMb,YAAY,GAAIc,QAAD,IAAc;AAC/B,YAAQA,QAAQ,CAACf,MAAjB;AACI,WAAK,MAAL;AACIR,QAAAA,WAAW,CAACuB,QAAQ,CAACC,IAAV,CAAX;AACA;;AACJ,WAAK,OAAL;AACIxB,QAAAA,WAAW,CAACuB,QAAQ,CAACE,KAAV,CAAX;AACA;;AACJ,WAAK,MAAL;AACIzB,QAAAA,WAAW,CAACuB,QAAQ,CAACG,IAAV,CAAX;AACA;;AACA;AACI1B,QAAAA,WAAW,CAAC,CAAD,CAAX;AACJ;AAZR;AAcH,GAfD;;AAiBA,WAAS2B,WAAT,GAAuB;AACnBvB,IAAAA,eAAe,CAAC,KAAD,CAAf;AACH;;AAED,sBACI,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAC7BL,MAAAA,QAD6B;AAE7BE,MAAAA,SAF6B;AAG7BM,MAAAA,aAH6B;AAI7BJ,MAAAA,YAJ6B;AAK7BO,MAAAA,UAL6B;AAM7BI,MAAAA,UAN6B;AAO7BC,MAAAA,QAP6B;AAQ7BM,MAAAA,WAR6B;AAS7BhB,MAAAA,eAT6B;AAU7BsB,MAAAA;AAV6B,KAAjC;AAAA,cAYK7B,KAAK,CAACiB;AAZX;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;GA9EQlB,uB;;KAAAA,uB;AAgFT,eAAeA,uBAAf","sourcesContent":["import { useState, createContext } from \"react\";\r\n\r\nexport const SettingsContext = createContext()\r\n\r\nfunction SettingsContextProvider(props) {\r\n\r\n    const [pomodoro, setPomodoro] = useState(0)\r\n    const [executing, setExecuting] = useState({})\r\n    const [startAnimate, setStartAnimate] = useState(false)\r\n\r\n    function setCurrentTimer (active_state) {\r\n        updateExecute({\r\n            ...executing,\r\n            active: active_state\r\n        })\r\n        setTimerTime(executing)\r\n    }\r\n \r\n    function startTimer() {\r\n        setStartAnimate(true)\r\n        document.querySelector('#ShowButton').title = 'Hide';\r\n    }\r\n\r\n    function pauseTimer() {\r\n    setStartAnimate(false)\r\n    }\r\n \r\n    const children = ({ remainingTime }) => {\r\n    const minutes = Math.floor(remainingTime / 60)\r\n    const seconds = remainingTime % 60\r\n    \r\n    return `${minutes}:${seconds}`\r\n    }\r\n\r\n    const SettingsBtn = () => {\r\n        setExecuting({})\r\n        setPomodoro(0)\r\n    }\r\n\r\n    const updateExecute = updatedSettings => {\r\n        setExecuting(updatedSettings)\r\n        setTimerTime(updatedSettings)\r\n    }\r\n\r\n    const setTimerTime = (evaluate) => {\r\n        switch (evaluate.active) {\r\n            case 'work':\r\n                setPomodoro(evaluate.work)\r\n                break;\r\n            case 'short':\r\n                setPomodoro(evaluate.short)\r\n                break;\r\n            case 'long':\r\n                setPomodoro(evaluate.long)\r\n                break;\r\n                default:\r\n                    setPomodoro(0)\r\n                break;\r\n        }\r\n    }\r\n\r\n    function stopAnimate() {\r\n        setStartAnimate(false)\r\n    }\r\n\r\n    return (\r\n        <SettingsContext.Provider value={{\r\n            pomodoro, \r\n            executing,\r\n            updateExecute, \r\n            startAnimate, \r\n            startTimer,\r\n            pauseTimer,\r\n            children,\r\n            SettingsBtn,\r\n            setCurrentTimer,\r\n            stopAnimate\r\n        }}>\r\n            {props.children}\r\n        </SettingsContext.Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default SettingsContextProvider"]},"metadata":{},"sourceType":"module"}