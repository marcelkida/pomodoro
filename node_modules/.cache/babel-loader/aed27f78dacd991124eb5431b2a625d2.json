{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kidam\\\\Documents\\\\GitHub\\\\pomodoro-app-with-react\\\\src\\\\components\\\\SetPomodoro.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { SettingsContext } from '../context/SettingsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SetPomodoro = () => {\n  _s();\n\n  const [newTimer, setNewTimer] = useState({\n    work: 25,\n    short: 5,\n    long: 10,\n    active: 'work'\n  });\n  const {\n    updateExecute\n  } = useContext(SettingsContext);\n\n  const handleChange = input => {\n    const {\n      name,\n      value\n    } = input.target;\n\n    switch (name) {\n      case 'work':\n        setNewTimer({ ...newTimer,\n          work: parseInt(value)\n        });\n        break;\n\n      case 'shortBreak':\n        setNewTimer({ ...newTimer,\n          short: parseInt(value)\n        });\n        break;\n\n      case 'longBreak':\n        setNewTimer({ ...newTimer,\n          long: parseInt(value)\n        });\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    updateExecute(newTimer);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"number\",\n          name: \"work\",\n          onChange: handleChange,\n          value: newTimer.work\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"number\",\n          name: \"shortBreak\",\n          onChange: handleChange,\n          value: newTimer.short\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"number\",\n          name: \"longBreak\",\n          onChange: handleChange,\n          value: newTimer.long\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Set Timer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SetPomodoro, \"8T76dxpqWoax1zTCT6Iur8tu+6A=\");\n\n_c = SetPomodoro;\nexport default SetPomodoro;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetPomodoro\");","map":{"version":3,"sources":["C:/Users/kidam/Documents/GitHub/pomodoro-app-with-react/src/components/SetPomodoro.js"],"names":["React","useContext","useState","SettingsContext","SetPomodoro","newTimer","setNewTimer","work","short","long","active","updateExecute","handleChange","input","name","value","target","parseInt","handleSubmit","e","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,eAAT,QAAgC,4BAAhC;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC;AACrCK,IAAAA,IAAI,EAAE,EAD+B;AAErCC,IAAAA,KAAK,EAAE,CAF8B;AAGrCC,IAAAA,IAAI,EAAE,EAH+B;AAIrCC,IAAAA,MAAM,EAAE;AAJ6B,GAAD,CAAxC;AAOA,QAAM;AAACC,IAAAA;AAAD,MAAkBV,UAAU,CAACE,eAAD,CAAlC;;AAEA,QAAMS,YAAY,GAAGC,KAAK,IAAI;AAC1B,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,KAAK,CAACG,MAA5B;;AACA,YAAQF,IAAR;AACI,WAAK,MAAL;AACIR,QAAAA,WAAW,CAAC,EACR,GAAGD,QADK;AAERE,UAAAA,IAAI,EAAEU,QAAQ,CAACF,KAAD;AAFN,SAAD,CAAX;AAIA;;AACJ,WAAK,YAAL;AACIT,QAAAA,WAAW,CAAC,EACR,GAAGD,QADK;AAERG,UAAAA,KAAK,EAAES,QAAQ,CAACF,KAAD;AAFP,SAAD,CAAX;AAIA;;AACJ,WAAK,WAAL;AACIT,QAAAA,WAAW,CAAC,EACR,GAAGD,QADK;AAERI,UAAAA,IAAI,EAAEQ,QAAQ,CAACF,KAAD;AAFN,SAAD,CAAX;AAIA;AAlBR;AAoBH,GAtBD;;AAuBA,QAAMG,YAAY,GAAGC,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,aAAa,CAACN,QAAD,CAAb;AACH,GAHD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACI;AAAM,MAAA,UAAU,MAAhB;AAAiB,MAAA,QAAQ,EAAEa,YAA3B;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAO,UAAA,SAAS,EAAC,OAAjB;AAAyB,UAAA,IAAI,EAAC,QAA9B;AAAuC,UAAA,IAAI,EAAC,MAA5C;AAAmD,UAAA,QAAQ,EAAEN,YAA7D;AAA2E,UAAA,KAAK,EAAEP,QAAQ,CAACE;AAA3F;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,SAAS,EAAC,OAAjB;AAAyB,UAAA,IAAI,EAAC,QAA9B;AAAuC,UAAA,IAAI,EAAC,YAA5C;AAAyD,UAAA,QAAQ,EAAEK,YAAnE;AAAiF,UAAA,KAAK,EAAEP,QAAQ,CAACG;AAAjG;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAO,UAAA,SAAS,EAAC,OAAjB;AAAyB,UAAA,IAAI,EAAC,QAA9B;AAAuC,UAAA,IAAI,EAAC,WAA5C;AAAwD,UAAA,QAAQ,EAAEI,YAAlE;AAAgF,UAAA,KAAK,EAAEP,QAAQ,CAACI;AAAhG;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAlDD;;GAAML,W;;KAAAA,W;AAoDN,eAAeA,WAAf","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { SettingsContext } from '../context/SettingsContext'\r\n\r\nconst SetPomodoro = () => {\r\n\r\n    const [newTimer, setNewTimer] = useState({\r\n        work: 25,\r\n        short: 5,\r\n        long: 10,\r\n        active: 'work'\r\n    })\r\n\r\n    const {updateExecute} = useContext(SettingsContext)\r\n\r\n    const handleChange = input => {\r\n        const {name, value} = input.target\r\n        switch (name) {\r\n            case 'work':\r\n                setNewTimer({\r\n                    ...newTimer,\r\n                    work: parseInt(value)\r\n                })\r\n                break;\r\n            case 'shortBreak':\r\n                setNewTimer({\r\n                    ...newTimer,\r\n                    short: parseInt(value)\r\n                })\r\n                break;\r\n            case 'longBreak':\r\n                setNewTimer({\r\n                    ...newTimer,\r\n                    long: parseInt(value)\r\n                })\r\n                break;\r\n        }\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        updateExecute(newTimer)\r\n    }\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form noValidate onSubmit={handleSubmit}>\r\n                <div className=\"input-wrapper\">\r\n                    <input className=\"input\" type=\"number\" name=\"work\" onChange={handleChange} value={newTimer.work} />\r\n                    <input className=\"input\" type=\"number\" name=\"shortBreak\" onChange={handleChange} value={newTimer.short} />\r\n                    <input className=\"input\" type=\"number\" name=\"longBreak\" onChange={handleChange} value={newTimer.long} />\r\n                </div>\r\n                <button type='submit'>Set Timer</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetPomodoro\r\n"]},"metadata":{},"sourceType":"module"}